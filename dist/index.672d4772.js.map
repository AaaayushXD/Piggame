{"mappings":"AAAA;AAEA,oBAAoB;AAEpB,0BAA0B;AAC1B,MAAM,YAAY,SAAS,cAAc;AACzC,MAAM,YAAY,SAAS,cAAc;AAEzC,sBAAsB;AACtB,MAAM,WAAW,SAAS,cAAc;AACxC,MAAM,WAAW,SAAS,eAAe;AAEzC,8BAA8B;AAC9B,MAAM,aAAa,SAAS,eAAe;AAC3C,MAAM,aAAa,SAAS,eAAe;AAE3C,gBAAgB;AAChB,MAAM,SAAS,SAAS,cAAc;AAEtC,mBAAmB;AACnB,MAAM,SAAS,SAAS,cAAc;AACtC,MAAM,UAAU,SAAS,cAAc;AACvC,MAAM,UAAU,SAAS,cAAc;AAEvC,uBAAuB;AACvB,IAAI,QAAQ,cAAc,cAAc;AACxC,MAAM,OAAO;IACR,SAAS;QAAC;QAAG;KAAE;IACf,eAAe;IACf,eAAe;IACf,UAAU;IAEX,WAAW,cAAc;IACzB,WAAW,cAAc;IACzB,SAAS,cAAc;IACvB,SAAS,cAAc;IAEvB,OAAO,UAAU,IAAI;IACrB,UAAU,UAAU,OAAO;IAC3B,UAAU,UAAU,OAAO;IAC3B,UAAU,UAAU,IAAI;IACxB,UAAU,UAAU,OAAO;IAC3B,SAAS,eAAe,CAAC,OAAO,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC;IAC3D,SAAS,eAAe,CAAC,OAAO,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC;AAC/D;AACA;AAGA,2BAA2B;AAC3B,MAAM,eAAe;IACjB,gCAAgC;IAChC,SAAS,eAAe,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,cAAc;IAClE,eAAe;IACf,eAAe,iBAAiB,IAAI,IAAI;IACxC,sBAAsB;IACtB,UAAU,UAAU,OAAO;IAC3B,UAAU,UAAU,OAAO;AAC/B;AAEA,sDAAsD;AACtD,SAAS,cAAc;AACvB,SAAS,cAAc;AACvB,OAAO,UAAU,IAAI;AAGrB,YAAY;AACZ,QAAQ,iBAAiB,SAAS;IAC9B,IAAI,SAAS;QACT,2BAA2B;QAC3B,MAAM,OAAO,KAAK,MAAM,KAAK,WAAW,KAAK;QAE7C,cAAc;QACd,OAAO,UAAU,OAAO;QACxB,OAAO,MAAM,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC;QAE/B,qCAAqC;QACrC,IAAI,SAAS,GAAG;YACZ,gBAAgB;YAChB,SAAS,eAAe,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,cAAc;QACtE,OACI,oBAAoB;QACpB;IAER;AACJ;AAEA,oBAAoB;AACpB,QAAQ,iBAAiB,SAAS;IAC9B,IAAI,SAAS;QACT,4CAA4C;QAC5C,MAAM,CAAC,aAAa,IAAI;QACxB,SAAS,eAAe,CAAC,OAAO,EAAE,aAAa,CAAC,EAAE,cAAc,MAAM,CAAC,aAAa;QAEpF,iBAAiB;QACjB,IAAI,MAAM,CAAC,aAAa,IAAI,KAAK;YAC7B,aAAa;YACb,UAAU;YACV,OAAO,UAAU,IAAI;YACrB,SAAS,cAAc,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,UAAU,IAAI;YACjE,SAAS,cAAc,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,UAAU,OAAO;YACpE,SAAS,eAAe,CAAC,MAAM,EAAE,aAAa,CAAC,EAAE,cAAc;QACnE;QAGA,uBAAuB;QACvB;IACJ;AACJ;AAEA,cAAc;AACd,OAAO,iBAAiB,SAAS","sources":["script.js"],"sourcesContent":["'use strict';\n\n//Selecting Elements\n\n//for selecting background\nconst player0El = document.querySelector('.player--0');\nconst player1El = document.querySelector('.player--1');\n\n//for selecting score \nconst score0El = document.querySelector('#score--0');\nconst score1El = document.getElementById('score--1');\n\n//for selecting current score \nconst current0El = document.getElementById('current--0');\nconst current1El = document.getElementById('current--1');\n\n//selecting dice\nconst diceEl = document.querySelector('.dice');\n\n//selecting buttons\nconst btnNew = document.querySelector('.btn--new');\nconst btnRoll = document.querySelector('.btn--roll');\nconst btnHold = document.querySelector('.btn--hold');\n\n//setting default value\nlet scores, currentScore, activePlayer, playing;\nconst init = function () {\n     scores = [0, 0];\n     currentScore = 0;\n     activePlayer = 0;\n     playing = true;\n\n    current0El.textContent = 0;\n    current1El.textContent = 0;\n    score0El.textContent = 0;\n    score1El.textContent = 0;\n\n    diceEl.classList.add('hidden');\n    player0El.classList.remove('player--winner');\n    player1El.classList.remove('player--winner');\n    player0El.classList.add('player--active');\n    player1El.classList.remove('player--active');\n    document.getElementById(`name--0`).textContent = `Player 1`;\n    document.getElementById(`name--1`).textContent = `Player 2`;\n}\ninit();\n\n\n//switching player function\nconst switchPlayer = function () {\n    //set values to 0 after swicting\n    document.getElementById(`current--${activePlayer}`).textContent = 0;\n    currentScore = 0;\n    activePlayer = activePlayer === 0 ? 1 : 0;\n    //toggle active player\n    player0El.classList.toggle('player--active');\n    player1El.classList.toggle('player--active');\n}\n\n//set values to selected element for initial condition\nscore1El.textContent = 0;\nscore0El.textContent = 0; \ndiceEl.classList.add('hidden');\n\n\n//Roll dice \nbtnRoll.addEventListener('click', function () {\n    if (playing) {\n        //generate random dice roll\n        const dice = Math.trunc(Math.random() * 6) + 1;\n\n        //display dice\n        diceEl.classList.remove('hidden');\n        diceEl.src = `dice-${dice}.png`\n\n        //if rolled dice is 1.. switch player\n        if (dice !== 1) {\n            currentScore += dice;\n            document.getElementById(`current--${activePlayer}`).textContent = currentScore;\n        } else {\n            //switiching player \n            switchPlayer();\n        }\n    }\n});\n\n//use of hold button\nbtnHold.addEventListener('click', function () {\n    if (playing) {\n        //add current score to active player's score\n        scores[activePlayer] += currentScore;\n        document.getElementById(`score--${activePlayer}`).textContent = scores[activePlayer];\n\n        //max score = 100\n        if (scores[activePlayer] >= 100) {\n            //Player wins\n            playing = false;\n            diceEl.classList.add('hidden');\n            document.querySelector(`.player--${activePlayer}`).classList.add('player--winner');\n            document.querySelector(`.player--${activePlayer}`).classList.remove('player--active');\n            document.getElementById(`name--${activePlayer}`).textContent = \"Winner!! ðŸŽ‰ðŸŽ‰ðŸŽ‰\"\n        } else {\n        \n        }\n        //switch to next player\n        switchPlayer();\n    }\n});\n\n//reload game \nbtnNew.addEventListener('click', init);"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}